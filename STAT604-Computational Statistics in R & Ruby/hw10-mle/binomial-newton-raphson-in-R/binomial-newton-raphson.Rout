
R : Copyright 2005, The R Foundation for Statistical Computing
Version 2.1.1  (2005-06-20), ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for a HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> invisible(options(echo = TRUE))
> # Log of the likelihood (without the constant)
> log.likelihood <- function(pi,successes,n.trials) {
+   successes * log(pi) + (n.trials - successes) * log(1-pi)
+ }
> 
> # First derivative of log likelihood
> d1.log.likelihood <- function(pi,successes,n.trials) {
+   successes/pi - (n.trials - successes)/(1-pi)
+ }
> 
> # Second derivative of log likelihood
> d2.log.likelihood <- function(pi,successes,n.trials) {
+   -successes/pi^2 - (n.trials - successes)/(1-pi)^2
+ }
> 
> find.mle <- function(successes,n.trials,initial.estimate,tolerance=0.01,show.plots=TRUE,pause=TRUE) {
+   if ( show.plots && pause ) {
+     old.ask <- par()$ask
+     par(ask=TRUE)
+   }
+   estimate <- initial.estimate
+   while ( abs(d1.log.likelihood(estimate,successes,n.trials)) > tolerance ) {
+     b <- d1.log.likelihood(estimate,successes,n.trials)
+     c <- d2.log.likelihood(estimate,successes,n.trials)
+     new.estimate <- estimate - b/c
+     if ( show.plots ) {
+       a <- log.likelihood(estimate,successes,n.trials)
+       pi <- seq(0,1,by=0.01)
+       ll <- log.likelihood(pi,successes,n.trials)
+       plot(pi,ll,ylab="Log-Likelihood",type="l")
+       abline(v=estimate)
+       abline(v=new.estimate,col="red")
+       taylor.approx <- a + b*(pi-estimate) + 0.5*c*(pi-estimate)^2
+       lines(pi,taylor.approx,col="green")
+     }
+     estimate <- new.estimate
+   }
+   if ( show.plots && pause ) {
+     par(ask=old.ask)
+   }
+   estimate
+ }
> 
> successes <- 21
> n.trials <- 50
> 
> #mle.via.newton.raphson <- find.mle(successes,n.trials,0.95,0.01,TRUE,TRUE)
> mle.via.newton.raphson <- find.mle(successes,n.trials,0.95,0.01,TRUE,FALSE)
> mle.via.newton.raphson
[1] 0.4199998
> 
> mle.via.analyticals <- successes/n.trials
> mle.via.analyticals
[1] 0.42
> 
> 
> proc.time()
[1] 0.29 0.02 0.31 0.00 0.00
> 
