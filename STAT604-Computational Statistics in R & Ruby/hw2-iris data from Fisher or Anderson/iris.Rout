
R : Copyright 2006, The R Foundation for Statistical Computing
Version 2.3.1 (2006-06-01)
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> invisible(options(echo = TRUE))
> iris <- read.table("iris.txt",header=TRUE)
> 
> # The means of sepal length, sepal width, petal length and petal width
> mean(iris$Sepal.Length)
[1] 5.843333
> mean(iris$Sepal.Width)
[1] 3.057333
> mean(iris$Petal.Length)
[1] 3.758
> mean(iris$Petal.Width)
[1] 1.199333
> 
> interval <- numeric(nlevels(iris$Species))
> 
> # Relative fequency for the sepal length data
> 
> # Choose number of bins
> # The data in each class are divided into at least log2(class size) bins
> 
> trange <- tapply(iris$Sepal.Length, iris$Species, range)
> tlength <- tapply(iris$Sepal.Length, iris$Species, length)
> numbin <- round( log2( tlength[1] ) )
> interval[1] <- round( (diff(trange$setosa) + 0.1) / numbin, 1)
> numbin <- round( log2( tlength[2] ) )
> interval[2] <- round( (diff(trange$versicolor) + 0.1) / numbin, 1)
> numbin <- round( log2( tlength[3] ) )
> interval[3] <- round( (diff(trange$virginica) + 0.1) / numbin, 1)
> 
> # Use the smallest interval calculated
> 
> mininterval <- min(interval)
> r <- range(iris$Sepal.Length)
> numbin <- ceiling( (diff(r) + 0.1) / mininterval)
> data <- cut( iris$Sepal.Length, breaks = r[1] - 0.1 + mininterval * (0:numbin) )
> table(data, iris$Species)
           
data        setosa versicolor virginica
  (4.2,4.5]      5          0         0
  (4.5,4.8]     11          0         0
  (4.8,5.1]     20          4         1
  (5.1,5.4]      9          2         0
  (5.4,5.7]      4         15         2
  (5.7,6]        1          9         6
  (6,6.3]        0          9        10
  (6.3,6.6]      0          5         9
  (6.6,6.9]      0          5        10
  (6.9,7.2]      0          1         4
  (7.2,7.5]      0          0         2
  (7.5,7.8]      0          0         5
  (7.8,8.1]      0          0         1
> 
> 
> # Relative fequency for the sepal width data
> 
> # Choose number of bins
> # The data in each class are divided into at least log2(class size) bins
> 
> trange <- tapply(iris$Sepal.Width, iris$Species, range)
> tlength <- tapply(iris$Sepal.Width, iris$Species, length)
> numbin <- round( log2( tlength[1] ) )
> interval[1] <- round( (diff(trange$setosa) + 0.1) / numbin, 1)
> numbin <- round( log2( tlength[2] ) )
> interval[2] <- round( (diff(trange$versicolor) + 0.1) / numbin, 1)
> numbin <- round( log2( tlength[3] ) )
> interval[3] <- round( (diff(trange$virginica) + 0.1) / numbin, 1)
> 
> # Use the smallest interval calculated
> 
> mininterval <- min(interval)
> r <- range(iris$Sepal.Width)
> numbin <- ceiling( (diff(r) + 0.1) / mininterval)
> data <- cut( iris$Sepal.Width, breaks = r[1] - 0.1 + mininterval * (0:numbin) )
> table(data, iris$Species)
           
data        setosa versicolor virginica
  (1.9,2.1]      0          1         0
  (2.1,2.3]      1          5         1
  (2.3,2.5]      0          7         4
  (2.5,2.7]      0          8         6
  (2.7,2.9]      1         13        10
  (2.9,3.1]     10         11        16
  (3.1,3.3]      7          4         8
  (3.3,3.5]     15          1         2
  (3.5,3.7]      6          0         1
  (3.7,3.9]      6          0         2
  (3.9,4.1]      2          0         0
  (4.1,4.3]      1          0         0
  (4.3,4.5]      1          0         0
> 
> 
> # Relative fequency for the petal length data
> 
> # Choose number of bins
> # The data in each class are divided into at least log2(class size) bins
> 
> trange <- tapply(iris$Petal.Length, iris$Species, range)
> tlength <- tapply(iris$Petal.Length, iris$Species, length)
> numbin <- round( log2( tlength[1] ) )
> interval[1] <- round( (diff(trange$setosa) + 0.1) / numbin, 1)
> numbin <- round( log2( tlength[2] ) )
> interval[2] <- round( (diff(trange$versicolor) + 0.1) / numbin, 1)
> numbin <- round( log2( tlength[3] ) )
> interval[3] <- round( (diff(trange$virginica) + 0.1) / numbin, 1)
> 
> # Use the smallest interval calculated
> 
> mininterval <- min(interval)
> r <- range(iris$Petal.Length)
> numbin <- ceiling( (diff(r) + 0.1) / mininterval)
> data <- cut( iris$Petal.Length, breaks = r[1] - 0.1 + mininterval * (0:numbin) )
> table(data, iris$Species)
           
data        setosa versicolor virginica
  (0.9,1.1]      2          0         0
  (1.1,1.3]      9          0         0
  (1.3,1.5]     26          0         0
  (1.5,1.7]     11          0         0
  (1.7,1.9]      2          0         0
  (1.9,2.1]      0          0         0
  (2.1,2.3]      0          0         0
  (2.3,2.5]      0          0         0
  (2.5,2.7]      0          0         0
  (2.7,2.9]      0          0         0
  (2.9,3.1]      0          1         0
  (3.1,3.3]      0          2         0
  (3.3,3.5]      0          2         0
  (3.5,3.7]      0          2         0
  (3.7,3.9]      0          4         0
  (3.9,4.1]      0          8         0
  (4.1,4.3]      0          6         0
  (4.3,4.5]      0         11         1
  (4.5,4.7]      0          8         0
  (4.7,4.9]      0          4         5
  (4.9,5.1]      0          2        10
  (5.1,5.3]      0          0         4
  (5.3,5.5]      0          0         5
  (5.5,5.7]      0          0         9
  (5.7,5.9]      0          0         5
  (5.9,6.1]      0          0         5
  (6.1,6.3]      0          0         1
  (6.3,6.5]      0          0         1
  (6.5,6.7]      0          0         3
  (6.7,6.9]      0          0         1
> 
> 
> # Relative fequency for the petal width data
> 
> # Choose number of bins
> # The data in each class are divided into at least log2(class size) bins
> 
> trange <- tapply(iris$Petal.Width, iris$Species, range)
> tlength <- tapply(iris$Petal.Width, iris$Species, length)
> numbin <- round( log2( tlength[1] ) )
> interval[1] <- round( (diff(trange$setosa) + 0.1) / numbin, 1)
> numbin <- round( log2( tlength[2] ) )
> interval[2] <- round( (diff(trange$versicolor) + 0.1) / numbin, 1)
> numbin <- round( log2( tlength[3] ) )
> interval[3] <- round( (diff(trange$virginica) + 0.1) / numbin, 1)
> 
> # Use the smallest interval calculated
> 
> mininterval <- min(interval)
> r <- range(iris$Petal.Width)
> numbin <- ceiling( (diff(r) + 0.1) / mininterval)
> data <- cut( iris$Petal.Width, breaks = r[1] - 0.1 + mininterval * (0:numbin) )
> table(data, iris$Species)
           
data        setosa versicolor virginica
  (0,0.1]        5          0         0
  (0.1,0.2]     29          0         0
  (0.2,0.3]      7          0         0
  (0.3,0.4]      7          0         0
  (0.4,0.5]      1          0         0
  (0.5,0.6]      1          0         0
  (0.6,0.7]      0          0         0
  (0.7,0.8]      0          0         0
  (0.8,0.9]      0          0         0
  (0.9,1]        0          7         0
  (1,1.1]        0          3         0
  (1.1,1.2]      0          5         0
  (1.2,1.3]      0         13         0
  (1.3,1.4]      0          7         1
  (1.4,1.5]      0         10         2
  (1.5,1.6]      0          3         1
  (1.6,1.7]      0          1         1
  (1.7,1.8]      0          1        11
  (1.8,1.9]      0          0         5
  (1.9,2]        0          0         6
  (2,2.1]        0          0         6
  (2.1,2.2]      0          0         3
  (2.2,2.3]      0          0         8
  (2.3,2.4]      0          0         3
  (2.4,2.5]      0          0         3
> 
> 
> # A scatter plot (as a PDF) of the sepal width and length,
> # using a different color for the plotting symbol of each species
> 
> # Define the color for each class
> color <- character(nrow(iris))
> color[iris$Species == "setosa"]     <- "red"
> color[iris$Species == "versicolor"] <- "blue"
> color[iris$Species == "virginica"]  <- "green"
> 
> # Write to the PDF file
> pdf("iris.pdf",width=5.5,height=5)
> plot(iris$Sepal.Length, iris$Sepal.Width, xlab="Sepal Length", ylab="Sepal Width", main="Iris Data", sub="Setosa: red; Versicolor: blue; Virginica: green", col=color)
> dev.off()
null device 
          1 
> proc.time()
[1] 0.728 0.040 0.834 0.000 0.000
> 
