
R : Copyright 2005, The R Foundation for Statistical Computing
Version 2.2.0  (2005-10-06 r35749)
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for a HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> invisible(options(echo = TRUE))
> d <- read.table("gpa.txt",header=TRUE)
> 
> # d$cgpa <- d$cgpa^8               # Major skewing of the data.
> 
> set.seed(536)                      # Set the random number seed so results
>                                    # can be exactly replicated.
> 
> d <- d[sample(1:nrow(d),15),]      # Pretend we only have 15 observations
> 
> plot(d$hsgpa,d$cgpa)
> test.statistic <- cor(d$hsgpa,d$cgpa)
> test.statistic
[1] 0.4305164
> cor.test(d$hsgpa,d$cgpa)           # Test the null hypothesis of no correlation

	Pearson's product-moment correlation

data:  d$hsgpa and d$cgpa 
t = 1.7198, df = 13, p-value = 0.1092
alternative hypothesis: true correlation is not equal to 0 
95 percent confidence interval:
 -0.1048754  0.7724295 
sample estimates:
      cor 
0.4305164 

> 
> fm <- lm( d$cgpa ~ d$hsgpa )       # Equivalently, test if slope = 0 in SLR
> summary(fm)

Call:
lm(formula = d$cgpa ~ d$hsgpa)

Residuals:
    Min      1Q  Median      3Q     Max 
-1.6386 -0.3821  0.1380  0.4601  1.1110 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   0.1026     1.2025   0.085    0.933
d$hsgpa       0.6655     0.3869   1.720    0.109

Residual standard error: 0.841 on 13 degrees of freedom
Multiple R-Squared: 0.1853,	Adjusted R-squared: 0.1227 
F-statistic: 2.958 on 1 and 13 DF,  p-value: 0.1092 

> abline(fm)
> 
> 
> n.permutations <- 10000            # Number of permutation samples
> draws <- numeric(n.permutations)
> e <- d
> for ( i in 1:n.permutations ) {
+   e[,"hsgpa"] <- sample(e[,"hsgpa"],nrow(e))   # Permute the high school GPA
+   draws[i] <- cor(e$hsgpa,e$cgpa)              # Compute the correlation
+ }
> 
> hist(draws)                                    # Display results
> abline(v=abs(test.statistic))
> abline(v=-abs(test.statistic))
> 
>                                                # Compute the two-sided p.value
> p.value = ( sum( draws > abs(test.statistic) ) + sum( draws < -abs(test.statistic) ) ) / length(draws)
> 
> p.value
[1] 0.1108
> 
> proc.time()
[1] 4.38 0.04 4.41 0.00 0.00
> 
